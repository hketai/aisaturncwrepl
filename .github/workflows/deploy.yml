name: Deploy to Digital Ocean Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Deploy to Production Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -e
            echo "üöÄ Starting deployment to app.aisaturn.co..."
            
            # Navigate to application directory
            cd /var/www/chatwoot
            
            # Pull latest code from GitHub
            echo "üì• Pulling latest code from GitHub main branch..."
            git fetch origin main
            git reset --hard origin/main
            
            # Load Ruby environment (rbenv) and set correct version
            export PATH="$HOME/.rbenv/bin:$PATH"
            eval "$(rbenv init -)"
            rbenv install 3.2.2 --skip-existing
            rbenv local 3.2.2
            
            # Load environment variables from .env.production
            # (Already configured on server - no need to pass secrets)
            source /var/www/chatwoot/.env.production || true
            
            # Install Ruby dependencies
            echo "üì¶ Installing Ruby gems (bundle install)..."
            bundle install --deployment --without development test
            
            # Install Node dependencies
            echo "üì¶ Installing Node packages (pnpm install)..."
            pnpm install --frozen-lockfile
            
            # Clean Vite cache to force fresh build
            echo "üßπ Cleaning Vite cache..."
            rm -rf tmp/vite-cache
            rm -rf public/vite-dev
            rm -rf public/packs/.vite
            
            # Precompile assets for production
            echo "üé® Precompiling Vite and Rails assets..."
            RAILS_ENV=production BUILD_MODE=library bin/vite build --force
            RAILS_ENV=production bin/vite build --force
            RAILS_ENV=production bundle exec rails assets:precompile
            
            # Run database migrations
            echo "üóÑÔ∏è Running database migrations..."
            RAILS_ENV=production bundle exec rails db:migrate
            
            # Cleanup old YAML configs that cause errors
            echo "üßπ Cleaning up old YAML installation configs..."
            PGPASSWORD=chatwoot_password_2025 psql -h localhost -U chatwoot -d chatwoot_production -c "DELETE FROM installation_configs WHERE value::text LIKE '---%%';" || true
            
            # Seed database (if seed file exists and has content)
            if [ -f db/seeds.rb ] && [ -s db/seeds.rb ]; then
              echo "üå± Seeding database with initial data..."
              RAILS_ENV=production bundle exec rails db:seed || echo "‚ö†Ô∏è Seed skipped (idempotent or already seeded)"
            fi
            
            # Clear Rails cache
            echo "üßπ Clearing Rails cache..."
            RAILS_ENV=production bundle exec rails cache:clear || true
            
            # Clear Sidekiq queues (optional, use with caution)
            # Uncomment if you want to clear pending jobs on each deploy
            # echo "üßπ Clearing Sidekiq queues..."
            # RAILS_ENV=production bundle exec rails runner "Sidekiq::Queue.all.each(&:clear)" || true
            
            # Restart Chatwoot services
            echo "üîÑ Restarting Chatwoot web and worker services..."
            sudo systemctl restart chatwoot-web
            sudo systemctl restart chatwoot-worker
            
            # Restart Nginx to clear any stuck connections
            echo "üîÑ Restarting Nginx..."
            sudo systemctl restart nginx
            
            # Wait for services to start
            sleep 3
            
            # Check service status
            echo "‚úÖ Checking service status..."
            sudo systemctl status chatwoot-web --no-pager || true
            sudo systemctl status chatwoot-worker --no-pager || true
            
            echo "‚úÖ Deployment completed successfully!"
            echo "üåê Application is now live at https://app.aisaturn.co"
