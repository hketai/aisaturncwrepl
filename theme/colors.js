const {
  blue,
  blueDark,
  green,
  greenDark,
  yellow,
  yellowDark,
  slate,
  slateDark,
  red,
  redDark,
  violet,
  violetDark,
} = require('@radix-ui/colors');

export const colors = {
  woot: {
    25: blue.blue2,
    50: blue.blue3,
    75: blue.blue4,
    100: blue.blue5,
    200: blue.blue7,
    300: blue.blue8,
    400: blueDark.blue11,
    500: blueDark.blue10,
    600: blueDark.blue9,
    700: blueDark.blue8,
    800: blueDark.blue6,
    900: blueDark.blue2,
  },
  green: {
    50: greenDark.green12,
    100: green.green6,
    200: green.green7,
    300: green.green8,
    400: greenDark.green10,
    500: greenDark.green9,
    600: green.green10,
    700: green.green11,
    800: greenDark.green7,
    900: greenDark.green6,
  },
  yellow: {
    50: yellow.yellow2,
    100: yellow.yellow3,
    200: yellow.yellow5,
    300: yellowDark.yellow10,
    400: yellowDark.yellow9,
    500: yellowDark.yellow11,
    600: yellow.yellow8,
    700: yellowDark.yellow7,
    800: yellowDark.yellow2,
    900: yellowDark.yellow1,
  },
  slate: {
    25: slate.slate2,
    50: slate.slate3,
    75: slate.slate4,
    100: slate.slate5,
    200: slate.slate7,
    300: slate.slate8,
    400: slateDark.slate11,
    500: slateDark.slate10,
    600: slate.slate11,
    700: slateDark.slate8,
    800: slateDark.slate4,
    900: slateDark.slate1,
  },
  black: {
    50: slate.slate2,
    100: slateDark.slate12,
    200: slate.slate7,
    300: slate.slate8,
    400: slateDark.slate11,
    500: slate.slate9,
    600: slateDark.slate9,
    700: slateDark.slate8,
    800: slateDark.slate7,
    900: slateDark.slate2,
  },
  red: {
    50: redDark.red12,
    100: red.red6,
    200: red.red8,
    300: redDark.red11,
    400: redDark.red10,
    500: red.red9,
    600: red.red10,
    700: red.red11,
    800: redDark.red8,
    900: red.red12,
  },
  violet: {
    50: violet.violet1,
    100: violetDark.violet12,
    200: violet.violet6,
    300: violet.violet8,
    400: violet.violet11,
    500: violet.violet9,
    600: violetDark.violet8,
    700: violetDark.violet7,
    800: violetDark.violet6,
    900: violet.violet12,
  },

  // next design system - simplified
  n: {
    slate: {
      1: 'rgb(var(--slate-1) / <alpha-value>)',
      2: 'rgb(var(--slate-2) / <alpha-value>)',
      3: 'rgb(var(--slate-3) / <alpha-value>)',
      4: 'rgb(var(--slate-4) / <alpha-value>)',
      5: 'rgb(var(--slate-5) / <alpha-value>)',
      6: 'rgb(var(--slate-6) / <alpha-value>)',
      7: 'rgb(var(--slate-7) / <alpha-value>)',
      8: 'rgb(var(--slate-8) / <alpha-value>)',
      9: 'rgb(var(--slate-9) / <alpha-value>)',
      10: 'rgb(var(--slate-10) / <alpha-value>)',
      11: 'rgb(var(--slate-11) / <alpha-value>)',
      12: 'rgb(var(--slate-12) / <alpha-value>)',
    },

    brand: {
      1: 'rgb(var(--brand-1) / <alpha-value>)',
      2: 'rgb(var(--brand-2) / <alpha-value>)',
      3: 'rgb(var(--brand-3) / <alpha-value>)',
      4: 'rgb(var(--brand-4) / <alpha-value>)',
      5: 'rgb(var(--brand-5) / <alpha-value>)',
      6: 'rgb(var(--brand-6) / <alpha-value>)',
      7: 'rgb(var(--brand-7) / <alpha-value>)',
      8: 'rgb(var(--brand-8) / <alpha-value>)',
      9: 'rgb(var(--brand-9) / <alpha-value>)',
      10: 'rgb(var(--brand-10) / <alpha-value>)',
      11: 'rgb(var(--brand-11) / <alpha-value>)',
      12: 'rgb(var(--brand-12) / <alpha-value>)',
      50: 'rgb(var(--brand-1) / <alpha-value>)',
      100: 'rgb(var(--brand-2) / <alpha-value>)',
      200: 'rgb(var(--brand-4) / <alpha-value>)',
      300: 'rgb(var(--brand-5) / <alpha-value>)',
      400: 'rgb(var(--brand-7) / <alpha-value>)',
      500: 'rgb(var(--brand-8) / <alpha-value>)',
      600: 'rgb(var(--brand-9) / <alpha-value>)',
      700: 'rgb(var(--brand-10) / <alpha-value>)',
      800: 'rgb(var(--brand-11) / <alpha-value>)',
      900: 'rgb(var(--brand-12) / <alpha-value>)',
    },

    black: '#000000',
    success: 'rgb(var(--success) / <alpha-value>)',
    warning: 'rgb(var(--warning) / <alpha-value>)',
    error: 'rgb(var(--error) / <alpha-value>)',
    background: 'rgb(var(--background-color) / <alpha-value>)',
    text: 'rgb(var(--text-primary) / <alpha-value>)',
    border: {
      default: 'rgb(var(--border-default) / <alpha-value>)',
      strong: 'rgb(var(--border-strong) / <alpha-value>)',
      light: 'rgb(var(--border-light) / <alpha-value>)',
    },
    alpha: {
      overlay: 'rgba(var(--alpha-overlay))',
      backdrop: 'rgba(var(--alpha-backdrop))',
    },
  },
};
